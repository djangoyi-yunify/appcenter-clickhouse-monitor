#!/usr/bin/env bash
set -eu
set -o pipefail

# exit code
EXIT_CODE_OK=0

# search path
ERR_FILE=/data/clickhouse-server/log/clickhouse-server.err.log

# hostname
INSTANCE_ID=$(hostname)

# userid
USER_ID={{cluster.user_id}}

# check id list
CHECK_USER_ID_LIST="usr-vLjpKnUC,"

# robot url
robot_url="https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=9df973d7-7e5e-45f3-861c-312b1acca45b"

main() {
    if [ $# -lt 1 ] || [ -z "$1" ]; then
        echo "{}"
        return $EXIT_CODE_OK
    fi
    if [ ! "$1" = "cluster" ] && [ ! "$1" = "node" ]; then
        echo "{}"
        return $EXIT_CODE_OK
    fi
    case "$1" in
    "cluster")
        getClusterMetrics
        ;;
    "node")
        getNodeMetrics
        ;;
    *)
        echo "{}"
        ;;
    esac
}

getClusterMetrics() {
    echo '{"cluster_health": 0}'
}

getNodeMetrics() {
    now_time=$(date '+%Y.%m.%d %H:%M')
    now_time=${now_time%?}
    raw_info=$(cat $ERR_FILE | sed -n "/$now_time/p" | sed -n '/\ Code:\ /p' | sed '/TABLE_IS_READ_ONLY/d; /Code: 1000/d; /Code: 235/d; /Code: 410/d')
    if [ -z "$raw_info" ]; then
        echo '{"session_error": 0}'
        return 0
    fi

    show_code=$(echo "$raw_info" | sed -n 's/.*Code: \([0-9]*\).*/\1/p' | sort -n | uniq | tail -n1)
    show_msg=$(echo "$raw_info" | grep "Code: $show_code" | tail -n1)
    if echo "$raw_info" | grep "Code: 999" >/dev/null 2>&1; then
        show_code=999
        show_msg=$(echo "$raw_info" | grep "Code: 999" | tail -n1)
    fi
    echo '{"session_error": '$show_code'}'

    # send message - prepare
    if ! echo "$CHECK_USER_ID_LIST" | grep "$USER_ID"; then
        return 0
    fi

    all_code=$(echo "$raw_info" | sed -n 's/.*Code: \([0-9]*\).*/\1/p' | sort -n | uniq | tr '\n', ',')
    all_code=${all_code%?}
    msg_cnt=$(echo "$raw_info" | wc -l)

    content=$(cat<<MYCONTENT
Instance: $INSTANCE_ID, Code: $all_code
$show_msg
Number of errors in last 10m: $msg_cnt
MYCONTENT
    )
    json_str=$(echo "$content" | sed ':a;N;$!ba;s/\n/\\n/g;s/\"/\\\"/g')

    # post data - normal
    postData1=$(cat<<MYPOSTDATA1
{
    "msgtype": "text",
    "text": {
        "content": "$json_str"
    }
}
MYPOSTDATA1
    )

    # post data - mention all
    postData2=$(cat<<MYPOSTDATA2
{
    "msgtype": "text",
    "text": {
        "content": "$json_str",
        "mentioned_list": ["@all"]
    }
}
MYPOSTDATA2
    )

    # send message - send
    if [ "$show_code" = "999" ]; then
        curl -s -XPOST -H 'Content-Type: application/json' $robot_url -d "$postData2" >/dev/null 2>&1 | :
    else
        curl -s -XPOST -H 'Content-Type: application/json' $robot_url -d "$postData1" >/dev/null 2>&1 | :
    fi
}

main $@